---
description: 
globs: 
alwaysApply: false
---
# 通用开发规范（general-rules.mdc）

## 1. 代码规范
- 统一使用 Python 3.8 及以上版本。
- 遵循 PEP8 编码风格，变量/函数/类命名需语义明确。
- 所有核心模块需添加类型注解和必要的文档字符串。
- 禁止在主分支提交未测试代码，建议使用 feature 分支开发。
- 重要逻辑需配备单元测试，测试覆盖率建议 >80%。
- 依赖管理采用 poetry，所有依赖需写入 pyproject.toml。

## 2. 数据处理
- 原始数据存放于 data/raw，处理后数据存放于 data/processed。
- 数据处理脚本需支持批量处理，输出格式为 .pt（Tensor）文件。
- 处理流程需剔除无用特征（如偏移量），并进行归一化处理。
- 数据集划分需保证 session 不穿插，比例为 70%/15%/15%。
- 采样频率、数据维度、特征说明等需在脚本注释中详细说明。
- 数据说明文档以及开发方案等存于docs/

## 3. 模型训练与推理
- 训练脚本需支持命令行参数配置（如 batch size、learning rate、设备等）。
- 支持断点续训与日志记录，日志建议保存为 csv 或 InfluxDB。
- 推理流程需支持 TorchScript/ONNX 导出，兼容 CPU/GPU。
- 推理延迟需 < 40ms/帧，低端设备需支持 INT8/ARM-NN。
- 训练与推理结果需可视化（如轨迹对比、混淆矩阵、消融实验等）。

## 4. 文档与交付
- 关键算法、数据流、系统架构需有流程图或伪代码说明。
- 交付物包括：模型代码、Docker 镜像、Unity 插件、API 文档、训练笔记。
- 重要变更需在 CHANGELOG.md 记录。

---

如有特殊需求或新场景，需在本规范基础上补充并评审通过后执行。


